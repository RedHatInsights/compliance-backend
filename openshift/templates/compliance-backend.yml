---
kind: Template
apiVersion: v1
metadata:
  name: compliance-backend
  annotations:
    openshift.io/display-name: Compliance backend
    description: Red Hat Insights Compliance backend
    tags: quickstart,ruby,rails
    iconClass: icon-ruby
    openshift.io/documentation-url: https://github.com/RedHatInsights/compliance-backend
message: |-
  The following service(s) have been created in your project: ${NAME}, ${DATABASE_SERVICE_NAME}.
labels:
  app: compliance-backend
  template: compliance-backend-template
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: "${NAME}"
  stringData:
    database-user: "${DATABASE_USER}"
    database-password: "${DATABASE_PASSWORD}"
    database-admin-password: "${DATABASE_ADMIN_PASSWORD}"
    application-user: "${APPLICATION_USER}"
    application-password: "${APPLICATION_PASSWORD}"
    keybase: "${SECRET_KEY_BASE}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}", "kind": "Service"}]'
  spec:
    ports:
    - name: web
      port: 8080
      targetPort: 8080
    selector:
      name: "${NAME}"
- kind: Route
  apiVersion: v1
  metadata:
    name: "${NAME}"
  spec:
    host: "${APPLICATION_DOMAIN}"
    to:
      kind: Service
      name: "${NAME}"
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Keeps track of changes in the application image
- kind: BuildConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to build the application
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    resources:
      limits:
        memory: "2Gi" 
    source:
      type: Git
      git:
        uri: "${SOURCE_REPOSITORY_URL}"
        ref: "${SOURCE_REPOSITORY_REF}"
      contextDir: "${CONTEXT_DIR}"
    strategy:
      type: Source
      sourceStrategy:
        from:
          kind: ImageStreamTag
          namespace: "${NAMESPACE}"
          name: ruby25-openscap:latest
        env:
        - name: RUBYGEM_MIRROR
          value: "${RUBYGEM_MIRROR}"
    output:
      to:
        kind: ImageStreamTag
        name: "${NAME}:latest"
    triggers:
    - type: ImageChange
    - type: ConfigChange
    - type: GitHub
      github:
        secret: "${GITHUB_WEBHOOK_SECRET}"
    # postCommit:
    #   script: bundle exec rake test
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Recreate
      recreateParams:
        pre:
          failurePolicy: Abort
          execNewPod:
            command:
            - bash
            - -c
            - |
              set -e
              RAILS_ENV=production bundle exec rake db:migrate
            containerName: "${NAME}"
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: "${NAME}:latest"
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${NAME}"
    template:
      metadata:
        name: "${NAME}"
        labels:
          name: "${NAME}"
      spec:
        containers:
        - name: "${NAME}"
          image: " "
          ports:
          - containerPort: 8080
          env:
          - name: DATABASE_SERVICE_NAME
            value: "${DATABASE_SERVICE_NAME}"
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-password
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-admin-password
          - name: POSTGRESQL_DATABASE
            value: "${DATABASE_NAME}"
          - name: SECRET_KEY_BASE
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: keybase
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: "${POSTGRESQL_MAX_CONNECTIONS}"
          - name: POSTGRESQL_SHARED_BUFFERS
            value: "${POSTGRESQL_SHARED_BUFFERS}"
          - name: APPLICATION_DOMAIN
            value: "${APPLICATION_DOMAIN}"
          - name: APPLICATION_USER
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: application-user
          - name: APPLICATION_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: application-password
          - name: RAILS_ENV
            value: "${RAILS_ENV}"
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"
- kind: Service
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    annotations:
      description: Exposes the database server
  spec:
    ports:
    - name: postgresql
      port: 5432
      targetPort: 5432
    selector:
      name: "${DATABASE_SERVICE_NAME}"
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${DATABASE_SERVICE_NAME}"
    annotations:
      description: Defines how to deploy the database
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Recreate
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - postgresql
        from:
          kind: ImageStreamTag
          namespace: "${NAMESPACE}"
          name: postgresql-96-centos7:latest
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${DATABASE_SERVICE_NAME}"
    template:
      metadata:
        name: "${DATABASE_SERVICE_NAME}"
        labels:
          name: "${DATABASE_SERVICE_NAME}"
      spec:
        volumes:
        - name: data
          emptyDir: {}
        containers:
        - name: postgresql
          image: " "
          ports:
          - containerPort: 5432
          readinessProbe:
            timeoutSeconds: 1
            initialDelaySeconds: 5
            exec:
              command:
              - "/usr/libexec/check-container"
          livenessProbe:
            timeoutSeconds: 10
            initialDelaySeconds: 120
            exec:
              command:
              - "/usr/libexec/check-container"
              - "--live"
          volumeMounts:
          - name: data
            mountPath: "/var/lib/pgsql/data"
          env:
          - name: POSTGRESQL_USER
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-user
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-password
          - name: POSTGRESQL_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: database-admin-password
          - name: POSTGRESQL_DATABASE
            value: "${DATABASE_NAME}"
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: "${POSTGRESQL_MAX_CONNECTIONS}"
          - name: POSTGRESQL_SHARED_BUFFERS
            value: "${POSTGRESQL_SHARED_BUFFERS}"
          resources:
            limits:
              memory: "${MEMORY_POSTGRESQL_LIMIT}"
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: compliance-backend
- name: NAMESPACE
  displayName: Namespace
  required: true
  description: The OpenShift Namespace where the ImageStream resides.
  value: openshift
- name: MEMORY_LIMIT
  displayName: Memory Limit
  required: true
  description: Maximum amount of memory the Rails container can use.
  value: 2Gi
- name: MEMORY_POSTGRESQL_LIMIT
  displayName: Memory Limit (PostgreSQL)
  required: true
  description: Maximum amount of memory the PostgreSQL container can use.
  value: 512Mi
- name: SOURCE_REPOSITORY_URL
  displayName: Git Repository URL
  required: true
  description: The URL of the repository with your application source code.
  value: https://github.com/RedHatInsights/compliance-backend
- name: SOURCE_REPOSITORY_REF
  displayName: Git Reference
  description: Set this to a branch name, tag or other ref of your repository if you
    are not using the default branch.
  value:
- name: CONTEXT_DIR
  displayName: Context Directory
  description: Set this to the relative path to your project if it is not in the root
    of your repository.
- name: APPLICATION_DOMAIN
  displayName: Application Hostname
  description: The exposed hostname that will route to the Rails service, if left
    blank a value will be defaulted.
  value: ''
- name: GITHUB_WEBHOOK_SECRET
  displayName: GitHub Webhook Secret
  description: Github trigger secret.  A difficult to guess string encoded as part
    of the webhook URL.  Not encrypted.
  generate: expression
  from: "[a-zA-Z0-9]{40}"
- name: SECRET_KEY_BASE
  displayName: Secret Key
  description: Your secret key for verifying the integrity of signed cookies.
  generate: expression
  from: "[a-z0-9]{127}"
- name: APPLICATION_USER
  displayName: Application Username
  required: true
  description: The application user that is used within the sample application to
    authorize access on pages.
  value: openshift
- name: APPLICATION_PASSWORD
  displayName: Application Password
  required: true
  description: The application password that is used within the sample application
    to authorize access on pages.
  value: secret
- name: RAILS_ENV
  displayName: Rails Environment
  required: true
  description: Environment under which the sample application will run. Could be set
    to production, development or test.
  value: production
- name: DATABASE_SERVICE_NAME
  required: true
  displayName: Database Service Name
  value: postgresql
- name: DATABASE_USER
  displayName: Database Username
  generate: expression
  from: user[A-Z0-9]{3}
- name: DATABASE_PASSWORD
  displayName: Database Password
  generate: expression
  from: "[a-zA-Z0-9]{8}"
- name: DATABASE_ADMIN_PASSWORD
  displayName: Database Admin Password
  generate: expression
  from: "[a-zA-Z0-9]{8}"
- name: DATABASE_NAME
  required: true
  displayName: Database Name
  value: compliance
- name: POSTGRESQL_MAX_CONNECTIONS
  displayName: Maximum Database Connections
  value: '100'
- name: POSTGRESQL_SHARED_BUFFERS
  displayName: Shared Buffer Amount
  value: 12MB
- name: RUBYGEM_MIRROR
  displayName: Custom RubyGems Mirror URL
  description: The custom RubyGems mirror URL
  value: ''
