---
kind: Template
apiVersion: v1
metadata:
  name: compliance-backend
  annotations:
    openshift.io/display-name: Compliance backend
    description: Red Hat Insights Compliance backend
    tags: ruby,rails
    iconClass: icon-ruby
    openshift.io/documentation-url: https://github.com/RedHatInsights/compliance-backend
labels:
  app: compliance-backend
  template: compliance-backend-template

objects:

- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Exposes and load balances the application pods
      service.alpha.openshift.io/dependencies: '[{"name": "${DATABASE_SERVICE_NAME}", "kind": "Service"}]'
  spec:
    ports:
    - name: web
      port: 3000
      targetPort: 8080
    selector:
      name: "${NAME}"

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    annotations:
      description: Defines how to deploy the application server
      template.alpha.openshift.io/wait-for-ready: 'true'
  spec:
    strategy:
      type: Recreate
      recreateParams:
        pre:
          failurePolicy: Abort
          execNewPod:
            command:
            - bash
            - -c
            - |
              set -e
              RAILS_ENV="${RAILS_ENV}" bundle exec rake db:migrate
            containerName: "${NAME}"
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          name: compliance-backend:latest
          namespace: ${IMAGE_NAMESPACE}
    - type: ConfigChange
    replicas: 1
    selector:
      name: "${NAME}"
    template:
      metadata:
        name: "${NAME}"
        labels:
          name: "${NAME}"
          app: "${NAME}"
      spec:
        containers:
        - name: "${NAME}"
          image: " "
          env:
          - name: APPLICATION_TYPE
            value: "${NAME}"
          - name: DATABASE_SERVICE_NAME
            value: "${DATABASE_SERVICE_NAME}"
          - name: POSTGRESQL_USER
            value: "${DATABASE_USER}"
          - name: POSTGRESQL_PASSWORD
            value: "${DATABASE_PASSWORD}"
          - name: POSTGRESQL_ADMIN_PASSWORD
            value: "${DATABASE_ADMIN_PASSWORD}"
          - name: POSTGRESQL_DATABASE
            value: "${DATABASE_NAME}"
          - name: SECRET_KEY_BASE
            value: "${SECRET_KEY_BASE}"
          - name: POSTGRESQL_MAX_CONNECTIONS
            value: "${POSTGRESQL_MAX_CONNECTIONS}"
          - name: POSTGRESQL_SHARED_BUFFERS
            value: "${POSTGRESQL_SHARED_BUFFERS}"
          - name: RAILS_ENV
            value: "${RAILS_ENV}"
          livenessProbe:
            httpGet:
              path: /r/insights/platform/compliance/api-docs/index.html
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /r/insights/platform/compliance/api-docs/index.html
              port: 8080
            initialDelaySeconds: 120
            timeoutSeconds: 1
          resources:
            limits:
              memory: "${MEMORY_LIMIT}"

parameters:
- name: NAMESPACE
- name: IMAGE_NAMESPACE
  description: Name of the namespace app images are pulled from (if not buildfactory)
  value: buildfactory
- name: NAME
  displayName: Name
  description: The name assigned to all of the frontend objects defined in this template.
  required: true
  value: compliance-backend
- name: MEMORY_LIMIT
  displayName: Memory Limit
  required: true
  description: Maximum amount of memory the Rails container can use.
  value: 2Gi
- name: SECRET_KEY_BASE
  displayName: Secret Key
  description: Your secret key for verifying the integrity of signed cookies.
  value: secret_key_base
- name: RAILS_ENV
  displayName: Rails Environment
  required: true
  description: Environment under which the sample application will run. Could be set
    to production, development or test.
  value: production
- name: RAILS_LOG_TO_STDOUT
  displayName: Rails log to stdout
  required: true
  description: Whether to log to stdout or to a log file
  value: true
- name: DATABASE_SERVICE_NAME
  required: true
  displayName: Database Service Name
  value: compliance-db
- name: DATABASE_USER
  displayName: Database Username
  value: compliance_user
- name: DATABASE_PASSWORD
  displayName: Database Password
  value: compliance_password
- name: DATABASE_ADMIN_PASSWORD
  displayName: Database Admin Password
  value: db_admin_password
- name: DATABASE_NAME
  required: true
  displayName: Database Name
  value: compliance
- name: POSTGRESQL_MAX_CONNECTIONS
  displayName: Maximum Database Connections
  value: '100'
- name: POSTGRESQL_SHARED_BUFFERS
  displayName: Shared Buffer Amount
  value: 12MB
