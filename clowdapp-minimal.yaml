---
apiVersion: v1
kind: Template
metadata:
  name: "${APP_NAME}"
objects:
  - apiVersion: cloud.redhat.com/v1alpha1
    kind: ClowdApp
    metadata:
      name: "${APP_NAME}"
      annotations:
        ${LINT_ANNOTATION}: "minimum three replicas not required"
    spec:
      envName: ${ENV_NAME}
      testing:
        iqePlugin: compliance
      dependencies:
        - host-inventory
        - ingress
        - rbac
      database:
        name: compliance
        version: 12
      kafkaTopics:
        - topicName: platform.upload.compliance
          partitions: 1
        - topicName: platform.payload-status
          partitions: 1
        - topicName: platform.inventory.events
          partitions: 1
        - topicName: platform.remediation-updates.compliance
          partitions: 1
        - topicName: platform.notifications.ingress
          partitions: 1
      inMemoryDb: true
      cyndi:
        enabled: true
        appName: "compliance"
        insightsOnly: true
      jobs: []
      deployments: []
  - apiVersion: metrics.console.redhat.com/v1alpha1
    kind: FloorPlan
    metadata:
      name: compliance
    spec:
      database:
        secretName: ${FLOORIST_DB_SECRET_NAME}
      objectStore:
        secretName: ${FLOORIST_BUCKET_SECRET_NAME}
      logLevel: ${FLOORIST_LOGLEVEL}
      suspend: ${{FLOORIST_SUSPEND}}
      queries:
        - prefix: insights/compliance/policies
          query: >-
            SELECT DISTINCT

              "policies"."id",
              "profiles"."ref_id",
              "profiles"."name",
              "accounts"."account_number",
              REGEXP_REPLACE("benchmarks"."ref_id", '.*RHEL-(\d)$', '\1') AS "os_major_version"
              FROM "policies"
              INNER JOIN "profiles" ON "profiles"."policy_id" = "policies"."id"
              INNER JOIN "accounts" ON "accounts"."id" = "policies"."account_id"
              INNER JOIN "benchmarks" ON "benchmarks"."id" = "profiles"."benchmark_id";
        - prefix: insights/compliance/policy_hosts
          query: >-
            SELECT "policy_hosts"."host_id", "policy_hosts"."policy_id" FROM "policy_hosts";
  - apiVersion: v1
    kind: Secret
    type: Opaque
    metadata:
      name: compliance-backend
    data:
      # This secret is only mounted in ephemeral environments, for any other deployment it is already
      # mounted and available. Its value is just a placeholder and does contain anything sensitive.
      secret_key_base: 'VGhpcyBpcyBhIHBsYWNlaG9sZGVyIHZhbHVlCg=='
parameters:
  - name: IMAGE_TAG
    description: Image tag
    required: true
    value: latest
  - name: IMAGE
    description: Image name
    value: quay.io/cloudservices/compliance-backend
  - name: ENV_NAME
    description: ClowdEnv Name
  - name: REPLICAS_BACKEND
    description: Replica count for backend service
    value: "1"
  - name: REPLICAS_CONSUMER
    description: Replica count for consumer
    value: "1"
  - name: REPLICAS_SIDEKIQ
    description: Replica count for sidekiq
    value: "1"
  - name: LINT_ANNOTATION
    value: 'default-lint-annotation-value'
  - name: RAILS_ENV
    required: true
    value: production
  - name: PATH_PREFIX
    required: true
    value: /api
  - name: RAILS_LOGLEVEL
    value: 'info'
  - name: RAILS_LOG_TO_STDOUT
    value: "true"
  - name: APP_NAME
    required: true
    value: compliance
  - name: MEMORY_LIMIT_PROM
    value: 300Mi
  - name: MEMORY_REQUEST_PROM
    value: 200Mi
  - name: CPU_LIMIT_PROM
    value: 400m
  - name: CPU_REQUEST_PROM
    value: 100m
  - name: MEMORY_LIMIT_SERV
    value: 800Mi
  - name: MEMORY_REQUEST_SERV
    value: 400Mi
  - name: CPU_LIMIT_SERV
    value: 700m
  - name: CPU_REQUEST_SERV
    value: 400m
  - name: MEMORY_LIMIT_CONS
    value: 800Mi
  - name: MEMORY_REQUEST_CONS
    value: 400Mi
  - name: CPU_LIMIT_CONS
    value: 500m
  - name: CPU_REQUEST_CONS
    value: 50m
  - name: MEMORY_LIMIT_SIDE
    value: 1000Mi
  - name: MEMORY_REQUEST_SIDE
    value: 500Mi
  - name: CPU_LIMIT_SIDE
    value: 1000m
  - name: CPU_REQUEST_SIDE
    value: 100m
  - name: MEMORY_LIMIT_FLOO
    value: 200Mi
  - name: MEMORY_REQUEST_FLOO
    value: 100Mi
  - name: CPU_LIMIT_FLOO
    value: 100m
  - name: CPU_REQUEST_FLOO
    value: 50m
  - name: MEMORY_LIMIT_IMPORT_SSG
    value: 1000Mi
  - name: MEMORY_REQUEST_IMPORT_SSG
    value: 500Mi
  - name: CPU_LIMIT_IMPORT_SSG
    value: 1000m
  - name: CPU_REQUEST_IMPORT_SSG
    value: 300m
  - name: REDIS_SSL
    description: 'Whether to use secured connection to Redis. Use string values of true or false'
    value: "true"
  - name: PUMA_MAX_THREADS
    value: "5"
  - name: RACECAR_OFFSET_COMMIT_INTERVAL
    required: true
    value: "5"
  - name: RACECAR_QUEUE_SIZE
    required: true
    value: "5"
  - name: SIDEKIQ_CONCURRENCY
    value: "1"
  - name: RAILS_MAX_THREADS
    value: "1"
  - name: DISABLE_RBAC
    value: "false"
  - name: PUMA_WORKERS
    value: "2"
  - name: PUMA_MAX_THREADS
    value: "5"
  - name: OLD_PATH_PREFIX
    value: /r/insights/platform
  - name: SETTINGS__FORCE_IMPORT_SSGS
    value: "false"
  - name: SETTINGS__REPORT_DOWNLOAD_SSL_ONLY
    value: "true"
  - name: FLOORIST_SUSPEND
    description: Disable Floorist cronjob execution
    required: true
    value: 'true'
  - description: database secret name
    name: FLOORIST_DB_SECRET_NAME
    value: compliance-db
  - description: bucket secret name
    name: FLOORIST_BUCKET_SECRET_NAME
    required: true
    value: dummy-secret
  - name: FLOORIST_LOGLEVEL
    description: Floorist loglevel config
    value: 'INFO'
  - name: IMPORT_SSG_SCHEDULE
    description: Cronjob schedule for import-ssg
    value: "*/5 * * * *" # every 5 minutes
  - name: MAX_INIT_TIMEOUT_SECONDS
    description: Number of seconds for timeout init container operation
    value: "120"
  - name: PRIMARY_REDIS_AS_CACHE
    description: Whether to use the clowder-provided Redis as cache or not
    value: 'false'
