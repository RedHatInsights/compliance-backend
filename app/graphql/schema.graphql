"""
A representation of a SCAP Security Guide version
"""
type Benchmark implements Node {
  description: String
  globalId: ID!
  id: ID!
  profiles: [Profile!]
  refId: String!
  rules: [Rule!]
  title: String!
  version: String!
}

"""
A Business Objective registered in Insights Compliance
"""
type BusinessObjective implements Node {
  globalId: ID!
  id: ID!
  title: String!
}

"""
The mutation root of this schema
"""
type Mutation implements Node {
  associateProfiles(input: associateProfilesInput!): associateProfilesPayload
  associateSystems(input: associateSystemsInput!): associateSystemsPayload
  createBusinessObjective(input: createBusinessObjectiveInput!): createBusinessObjectivePayload
  createProfile(input: createProfileInput!): createProfilePayload
  deleteProfile(input: deleteProfileInput!): deleteProfilePayload
  deleteTestResults(input: deleteTestResultsInput!): deleteTestResultsPayload
  globalId: ID!
  id: ID!!
  updateProfile(input: UpdateProfileInput!): UpdateProfilePayload
}

"""
An object with an ID.
"""
interface Node {
  """
  ID of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

"""
A Profile registered in Insights Compliance
"""
type Profile implements Node & RulesPreload {
  accountId: ID!
  benchmark: Benchmark
  benchmarkId: ID!
  businessObjective: BusinessObjective
  businessObjectiveId: ID
  complianceThreshold: Float!
  compliant(
    """
    Is a system compliant with this profile?
    """
    systemId: String
  ): Boolean!
  compliantHostCount: Int!
  description: String
  external: Boolean!
  globalId: ID!
  hosts: [System!]
  id: ID!
  lastScanned(
    """
    Last time this profile was scanned for a system
    """
    systemId: String
  ): String!
  majorOsVersion: String!
  name: String!
  policy: Profile
  refId: String!
  rules(
    """
    Rule identifier to filter by
    """
    identifier: String

    """
    Rule references to filter by
    """
    references: [String!]

    """
    System ID to filter by
    """
    systemId: String
  ): [Rule!]
  rulesFailed(
    """
    Rules failed for a system and a profile
    """
    systemId: String
  ): Int!
  rulesPassed(
    """
    Rules passed for a system and a profile
    """
    systemId: String
  ): Int!
  score(
    """
    Latest TestResult score for this system and profile
    """
    systemId: String
  ): Float!
  totalHostCount: Int!
}

"""
The connection type for Profile.
"""
type ProfileConnection {
  """
  A list of edges.
  """
  edges: [ProfileEdge]

  """
  A list of nodes.
  """
  nodes: [Profile]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type ProfileEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Profile
}

"""
The root of all queries
"""
type Query implements Node {
  """
  All profiles visible by the user
  """
  allProfiles: [Profile!]
  benchmark(id: String!): Benchmark

  """
  All business objectives visible by the user
  """
  businessObjectives: [BusinessObjective!]
  globalId: ID!
  id: ID!!

  """
  Latest benchmarks visible by the user
  """
  latestBenchmarks: [Benchmark!]
  profile(id: String!): Profile
  profiles(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Pagination limit
    """
    limit: Int

    """
    Pagination offset
    """
    offset: Int

    """
    Search query
    """
    search: String
  ): ProfileConnection!

  """
  Details for a system
  """
  system(id: String!): System
  systems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Pagination limit
    """
    limit: Int

    """
    Pagination offset
    """
    offset: Int

    """
    Search query
    """
    search: String
  ): SystemConnection!
  testResult(
    """
    Global ID for Record
    """
    id: String!
  ): TestResult!
  testResults(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int

    """
    Pagination limit
    """
    limit: Int

    """
    Pagination offset
    """
    offset: Int

    """
    Search query
    """
    search: String
  ): TestResultConnection!
}

"""
A Rule registered in Insights Compliance
"""
type Rule implements Node {
  compliant(
    """
    Is a system compliant with this profile?
    """
    profileId: String

    """
    Is a system compliant?
    """
    systemId: String
  ): Boolean!
  description: String
  globalId: ID!
  id: ID!
  identifier: String
  profiles: [Profile!]
  rationale: String
  refId: String!
  references: String
  remediationAvailable: Boolean!
  severity: String!
  title: String!
}

interface RulesPreload {
}

"""
A System registered in Insights Compliance
"""
type System implements Node {
  globalId: ID!
  id: ID!
  lastScanned(
    """
    Filter results by profile ID
    """
    profileId: String
  ): String
  name: String!
  osMajorVersion: Int
  osMinorVersion: Int
  profiles: [Profile!]
  rulesFailed(
    """
    Filter results by profile ID
    """
    profileId: String
  ): Int!
  rulesPassed(
    """
    Filter results by profile ID
    """
    profileId: String
  ): Int!
}

"""
The connection type for System.
"""
type SystemConnection {
  """
  A list of edges.
  """
  edges: [SystemEdge]

  """
  A list of nodes.
  """
  nodes: [System]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type SystemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: System
}

"""
A TestResult as recorded in Insights Compliance
"""
type TestResult implements Node {
  endTime: String!
  globalId: ID!
  host: System!
  id: ID!
  profile: Profile!
  score: Float!
  startTime: String
}

"""
The connection type for TestResult.
"""
type TestResultConnection {
  """
  A list of edges.
  """
  edges: [TestResultEdge]

  """
  A list of nodes.
  """
  nodes: [TestResult]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int!
}

"""
An edge in a connection.
"""
type TestResultEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: TestResult
}

"""
Autogenerated input type of UpdateProfile
"""
input UpdateProfileInput {
  businessObjectiveId: ID

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  complianceThreshold: Float
  description: String
  id: ID!
  name: String
}

"""
Autogenerated return type of UpdateProfile
"""
type UpdateProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profile: Profile
}

"""
Autogenerated input type of associateProfiles
"""
input associateProfilesInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  profileIds: [ID!]!
}

"""
Autogenerated return type of associateProfiles
"""
type associateProfilesPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  system: System
}

"""
Autogenerated input type of associateSystems
"""
input associateSystemsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
  systemIds: [ID!]!
}

"""
Autogenerated return type of associateSystems
"""
type associateSystemsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profile: Profile
}

"""
Autogenerated input type of createBusinessObjective
"""
input createBusinessObjectiveInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  title: String!
}

"""
Autogenerated return type of createBusinessObjective
"""
type createBusinessObjectivePayload {
  businessObjective: BusinessObjective

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
}

"""
Autogenerated input type of createProfile
"""
input createProfileInput {
  benchmarkId: ID!
  businessObjectiveId: String

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  cloneFromProfileId: ID!
  complianceThreshold: Float
  description: String
  name: String!
  refId: ID!
  selectedRuleRefIds: [String!]!
}

"""
Autogenerated return type of createProfile
"""
type createProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profile: Profile!
}

"""
Autogenerated input type of deleteProfile
"""
input deleteProfileInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of deleteProfile
"""
type deleteProfilePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profile: Profile!
}

"""
Autogenerated input type of deleteTestResults
"""
input deleteTestResultsInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profileId: ID!
}

"""
Autogenerated return type of deleteTestResults
"""
type deleteTestResultsPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  profile: Profile!
  testResults: [TestResult!]!
}